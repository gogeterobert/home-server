- name: Deploy K3s Manifests
  hosts: servers
  become: yes
  tasks:
    - name: Create a temporary directory for K3s manifests
      ansible.builtin.tempfile:
        state: directory
        suffix: k3s_manifests
      register: temp_dir

    - name: Download latest cert-manager manifest
      ansible.builtin.get_url:
        url: https://github.com/cert-manager/cert-manager/releases/latest/download/cert-manager.yaml
        dest: "{{ temp_dir.path }}/cert-manager.yaml"
        mode: "0644"

    - name: Download Longhorn v1.6.2 manifest
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/longhorn/longhorn/v1.6.2/deploy/longhorn.yaml
        dest: "{{ temp_dir.path }}/longhorn.yaml"
        mode: "0644"

    - name: Copy K3s manifests to the temporary directory
      ansible.builtin.copy:
        src: k3s-manifests/
        dest: "{{ temp_dir.path }}/"
        owner: root
        group: root
        mode: "0644"

    - name: Render the registry auth secret template
      ansible.builtin.template:
        src: k3s-manifests/registry-auth-secret.yaml.j2
        dest: "{{ temp_dir.path }}/registry-auth-secret.yaml"
        owner: root
        group: root
        mode: "0644"
      vars:
        REGISTRY_HTPASSWD: "{{ lookup('env', 'REGISTRY_HTPASSWD') }}"

    - name: Render the registry auth docker json
      ansible.builtin.template:
        src: k3s-manifests/registry-image-creds.yaml.j2
        dest: "{{ temp_dir.path }}/registry-image-creds.yaml"
        owner: root
        group: root
        mode: "0644"
      vars:
        DOCKERCONFIGJSON_B64: "{{ lookup('env', 'DOCKERCONFIGJSON_B64') }}"

    - name: Render the CurseForge API key secret
      ansible.builtin.template:
        src: k3s-manifests/secret-cf-api-key.yaml.j2
        dest: "{{ temp_dir.path }}/secret-cf-api-key.yaml"
        owner: root
        group: root
        mode: "0644"
      vars:
        CF_API_KEY: "{{ lookup('env', 'CF_API_KEY') }}"

    - name: Render the nostalgiaservice manifest
      ansible.builtin.template:
        src: k3s-manifests/nostalgiaservice.yml.j2
        dest: "{{ temp_dir.path }}/nostalgiaservice.yml"
        owner: root
        group: root
        mode: "0644"
      vars:
        db_user: nostalgiaservice
        db_password: nostalgiaservicepass
        keycloak_client_id: "{{ lookup('env', 'KEYCLOAK_CLIENT_ID') }}"
        keycloak_client_secret: "{{ lookup('env', 'KEYCLOAK_CLIENT_SECRET') }}"

    - name: Render the Nextcloud manifest
      ansible.builtin.template:
        src: k3s-manifests/nextcloud.yml.j2
        dest: "{{ temp_dir.path }}/nextcloud.yml"
        owner: root
        group: root
        mode: "0644"
      vars:
        nextcloud_postgres_password: "{{ lookup('env', 'NEXTCLOUD_POSTGRES_PASSWORD') }}"
        nextcloud_admin_password: "{{ lookup('env', 'NEXTCLOUD_ADMIN_PASSWORD') }}"

    - name: Apply cert-manager manifest
      command: kubectl apply -f "{{ temp_dir.path }}/cert-manager.yaml"

    - name: Wait for cert-manager-webhook to be ready
      command: >
        kubectl rollout status deployment/cert-manager-webhook
        -n cert-manager --timeout=120s

    - name: Apply Longhorn manifest
      command: kubectl apply -f "{{ temp_dir.path }}/longhorn.yaml"

    - name: Wait for Longhorn manager to be ready
      command: >
        kubectl rollout status daemonset/longhorn-manager
        -n longhorn-system --timeout=300s

    - name: Apply K3s Manifests
      command: kubectl apply -f "{{ temp_dir.path }}/" --prune --all

    - name: Remove temporary directory
      ansible.builtin.file:
        path: "{{ temp_dir.path }}"
        state: absent
